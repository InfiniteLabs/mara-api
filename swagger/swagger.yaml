consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  Appointment:
    example:
      email: user@example.com
      notes: Repudiandae eveniet tempora.
      phone: "3347662313"
      problematic: false
      send_email: false
      send_sms: true
      status: todo
      urgent: false
      what: Convergenza
      when: 2004-04-25T13:13:35+02:00
      where: Budrio
      who: Pippo Pippis
    properties:
      email:
        description: The email of who's requesting it
        example: user@example.com
        format: email
        type: string
      notes:
        description: Internal notes about the Appointment
        example: Repudiandae eveniet tempora.
        type: string
      phone:
        description: The phone of the client
        example: "3347662313"
        type: string
      problematic:
        default: false
        description: Option specifying that the work is problematic for some reason
        example: false
        type: boolean
      send_email:
        default: false
        description: Option to send email to the client
        example: false
        type: boolean
      send_sms:
        default: false
        description: Option to send sms to the client
        example: true
        type: boolean
      status:
        description: The status of the work. Can be one of todo/doing/done
        example: todo
        pattern: todo|doing|done
        type: string
      urgent:
        default: false
        description: Option specifying that the work is to be done now
        example: false
        type: boolean
      what:
        description: What is the purpose of the appointment
        example: Convergenza
        type: string
      when:
        description: When is the appointment scheduled
        example: 2004-04-25T13:13:35+02:00
        format: date-time
        type: string
      where:
        description: Where is the appointment scheduled
        example: Budrio
        type: string
      who:
        description: Who is requesting the appointment
        example: Pippo Pippis
        type: string
    required:
    - who
    - what
    - when
    - where
    title: Appointment
    type: object
  Login:
    example:
      password: password
      user: user
    properties:
      password:
        description: The password
        example: password
        type: string
      user:
        description: The username
        example: user
        type: string
    title: Login
    type: object
  MaraAppointment:
    description: MaraAppointment media type (default view)
    example:
      email: user@example.com
      href: Eligendi natus.
      id: Dicta consectetur illo mollitia qui qui pariatur.
      notes: Doloremque suscipit aut sed omnis fugit accusamus.
      phone: "3347662313"
      problematic: true
      send_email: true
      send_sms: true
      status: todo
      urgent: true
      what: Convergenza
      when: 1988-01-03T19:41:46+01:00
      where: Budrio
      who: Pippo Pippis
    properties:
      email:
        description: The email of who's requesting it
        example: user@example.com
        format: email
        type: string
      href:
        description: The url of the appointment
        example: Eligendi natus.
        type: string
      id:
        description: The id of the appointment
        example: Dicta consectetur illo mollitia qui qui pariatur.
        type: string
      notes:
        description: Internal notes about the Appointment
        example: Doloremque suscipit aut sed omnis fugit accusamus.
        type: string
      phone:
        description: The phone of the client
        example: "3347662313"
        type: string
      problematic:
        default: false
        description: Option specifying that the work is problematic for some reason
        example: true
        type: boolean
      send_email:
        default: false
        description: Option to send email to the client
        example: true
        type: boolean
      send_sms:
        default: false
        description: Option to send sms to the client
        example: true
        type: boolean
      status:
        description: The status of the work. Can be one of todo/doing/done
        example: todo
        pattern: todo|doing|done
        type: string
      urgent:
        default: false
        description: Option specifying that the work is to be done now
        example: true
        type: boolean
      what:
        description: What is the purpose of the appointment
        example: Convergenza
        type: string
      when:
        description: When is the appointment scheduled
        example: 1988-01-03T19:41:46+01:00
        format: date-time
        type: string
      where:
        description: Where is the appointment scheduled
        example: Budrio
        type: string
      who:
        description: Who is requesting the appointment
        example: Pippo Pippis
        type: string
    title: 'Mediatype identifier: application/vnd.mara.appointment'
    type: object
  MaraAppointmentCollection:
    description: MaraAppointmentCollection is the media type for an array of MaraAppointment
      (default view)
    example:
    - email: user@example.com
      href: Eligendi natus.
      id: Dicta consectetur illo mollitia qui qui pariatur.
      notes: Doloremque suscipit aut sed omnis fugit accusamus.
      phone: "3347662313"
      problematic: true
      send_email: true
      send_sms: true
      status: todo
      urgent: true
      what: Convergenza
      when: 1988-01-03T19:41:46+01:00
      where: Budrio
      who: Pippo Pippis
    - email: user@example.com
      href: Eligendi natus.
      id: Dicta consectetur illo mollitia qui qui pariatur.
      notes: Doloremque suscipit aut sed omnis fugit accusamus.
      phone: "3347662313"
      problematic: true
      send_email: true
      send_sms: true
      status: todo
      urgent: true
      what: Convergenza
      when: 1988-01-03T19:41:46+01:00
      where: Budrio
      who: Pippo Pippis
    items:
      $ref: '#/definitions/MaraAppointment'
    title: 'Mediatype identifier: application/vnd.mara.appointment; type=collection'
    type: array
  MaraToken:
    description: MaraToken media type (default view)
    example:
      token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
    properties:
      token:
        description: The token to use in subsequent api calls
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
        type: string
    title: 'Mediatype identifier: application/vnd.mara.token'
    type: object
  Reset:
    example:
      user: user
    properties:
      user:
        description: The user that will receive the new password
        example: user
        type: string
    title: Reset
    type: object
host: localhost:9000
info:
  title: An api to handle appointments
  version: ""
paths:
  /appointments:
    get:
      description: |
        show a list of appointments for the selected time. If no interval is selected it shows the appointments of the current week

        Required security scopes:
      operationId: calendar#list
      parameters:
      - description: The end of the interval
        in: query
        name: end
        required: false
        type: string
      - description: The start of the interval
        in: query
        name: start
        required: false
        type: string
      - default: ""
        description: Restrict the query to a location
        in: query
        name: where
        required: false
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MaraAppointmentCollection'
        "500":
          description: Internal Server Error
      schemes:
      - http
      security:
      - jwt: []
      summary: list calendar
      tags:
      - calendar
    put:
      description: |
        create a new appointment

        Required security scopes:
      operationId: calendar#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Appointment'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MaraAppointment'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      schemes:
      - http
      security:
      - jwt: []
      summary: create calendar
      tags:
      - calendar
  /appointments/{id}:
    delete:
      description: |
        deletes a single appointment

        Required security scopes:
      operationId: calendar#delete
      parameters:
      - in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MaraAppointment'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      schemes:
      - http
      security:
      - jwt: []
      summary: delete calendar
      tags:
      - calendar
    get:
      description: |
        show the details of a single appointment

        Required security scopes:
      operationId: calendar#show
      parameters:
      - in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MaraAppointment'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      schemes:
      - http
      security:
      - jwt: []
      summary: show calendar
      tags:
      - calendar
    post:
      description: |
        change properties of a single appointment

        Required security scopes:
      operationId: calendar#edit
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Appointment'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MaraAppointment'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      schemes:
      - http
      security:
      - jwt: []
      summary: edit calendar
      tags:
      - calendar
  /auth/login:
    post:
      description: Login with username and password and obtain a token
      operationId: auth#login
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Login'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MaraToken'
        "400":
          description: Bad Request
      schemes:
      - http
      summary: login auth
      tags:
      - auth
  /auth/reset:
    post:
      description: Send a new password to the email specified
      operationId: auth#reset
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Reset'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - http
      summary: reset auth
      tags:
      - auth
  /builder/v1/swagger.json:
    get:
      operationId: public#/builder/v1/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
      summary: Download swagger/swagger.json
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
responses:
  BadRequest:
    description: Bad Request
  InternalServerError:
    description: Internal Server Error
  NotFound:
    description: Not Found
  OK:
    description: OK
schemes:
- http
securityDefinitions:
  jwt:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
